[{"/Users/dk/Documents/GitHub/dkitter/src/index.js":"1","/Users/dk/Documents/GitHub/dkitter/src/components/App.js":"2","/Users/dk/Documents/GitHub/dkitter/src/components/Router.js":"3","/Users/dk/Documents/GitHub/dkitter/src/routes/Home.js":"4","/Users/dk/Documents/GitHub/dkitter/src/routes/Auth.js":"5","/Users/dk/Documents/GitHub/dkitter/src/fbase.js":"6","/Users/dk/Documents/GitHub/dkitter/src/components/Navigation.js":"7","/Users/dk/Documents/GitHub/dkitter/src/routes/Profile.js":"8","/Users/dk/Documents/GitHub/dkitter/src/components/Dweet.js":"9","/Users/dk/Documents/GitHub/dkitter/src/components/DweetFactory.js":"10","/Users/dk/Documents/GitHub/dkitter/src/components/AuthForm.js":"11"},{"size":292,"mtime":1612228561131,"results":"12","hashOfConfig":"13"},{"size":1141,"mtime":1612229891828,"results":"14","hashOfConfig":"13"},{"size":1290,"mtime":1612229960666,"results":"15","hashOfConfig":"13"},{"size":1267,"mtime":1612228809575,"results":"16","hashOfConfig":"13"},{"size":1290,"mtime":1612228766043,"results":"17","hashOfConfig":"13"},{"size":661,"mtime":1611970947750,"results":"18","hashOfConfig":"13"},{"size":1186,"mtime":1612229182530,"results":"19","hashOfConfig":"13"},{"size":1717,"mtime":1612228965717,"results":"20","hashOfConfig":"13"},{"size":2424,"mtime":1612229250855,"results":"21","hashOfConfig":"13"},{"size":2936,"mtime":1612230190948,"results":"22","hashOfConfig":"13"},{"size":1895,"mtime":1612229164207,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hgiqax",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dk/Documents/GitHub/dkitter/src/index.js",[],["49","50"],"/Users/dk/Documents/GitHub/dkitter/src/components/App.js",[],["51","52"],"/Users/dk/Documents/GitHub/dkitter/src/components/Router.js",[],"/Users/dk/Documents/GitHub/dkitter/src/routes/Home.js",[],"/Users/dk/Documents/GitHub/dkitter/src/routes/Auth.js",[],"/Users/dk/Documents/GitHub/dkitter/src/fbase.js",[],"/Users/dk/Documents/GitHub/dkitter/src/components/Navigation.js",[],"/Users/dk/Documents/GitHub/dkitter/src/routes/Profile.js",[],"/Users/dk/Documents/GitHub/dkitter/src/components/Dweet.js",["53"],"/Users/dk/Documents/GitHub/dkitter/src/components/DweetFactory.js",["54"],"import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { dbService, storageService } from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst DweetFactory = ({ userObj }) => {\n  const [dweet, setDweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (dweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const dweetObj = {\n      text: dweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"dweets\").add(dweetObj);\n    setDweet(\"\");\n    setAttachment(\"\");\n    // const imageName = document.querySelector(\"#image\");\n    // imageName.value = null;\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setDweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    // const imageName = document.querySelector(\"#image\");\n    // imageName.value = \"\";\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={dweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default DweetFactory;\n","/Users/dk/Documents/GitHub/dkitter/src/components/AuthForm.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":66,"column":38,"nodeType":"63","endLine":66,"endColumn":74},{"ruleId":"61","severity":1,"message":"62","line":92,"column":11,"nodeType":"63","endLine":97,"endColumn":13},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]